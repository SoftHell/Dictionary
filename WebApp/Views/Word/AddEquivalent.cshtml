@model WebApp.ViewModels.WordViewModel

<h1>@Resources.Views.Word.Create.AddEquivalent</h1>

<h4>@Model.Word.Value</h4>
<hr />
<div class="row">
    <div class="col-md-8">
        @*<form asp-action="AddEquivalent">
            <input type="hidden" asp-for="Word!.QueryWordId"/>
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Word!.Value" class="control-label"></label>
                <input asp-for="Word!.Value" class="form-control"/>
                <span asp-validation-for="Value" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Word!.Example" class="control-label"></label>
                <textarea asp-for="Word!.Example" class="form-control"></textarea>
                <span asp-validation-for="Example" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Word!.Explanation" class="control-label"></label>
                <textarea asp-for="Word!.Explanation" class="form-control"></textarea>
                <span asp-validation-for="Explanation" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="@Resources.CRUDCommon.Submit" class="btn btn-primary"/>
            </div>
        </form>*@
        
        
        @*<a class="form-check btn btn-info small text-danger" onclick="window.location.href = '?id=@Model.Id&boardChoice=@Model.BoardChoice&x=@x&y=@y'">
            @CellContent(x, y)
        </a>*@
        
    </div>
</div>
<div>
    <a asp-action="Index">@Resources.CRUDCommon.BackToList</a>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}